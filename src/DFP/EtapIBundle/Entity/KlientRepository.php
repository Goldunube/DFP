<?php

namespace DFP\EtapIBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\NoResultException;

/**
 * KlientRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class KlientRepository extends EntityRepository
{
    public function findOneByNIP($numer)
    {
        return $this->getEntityManager()
            ->createQuery(
                'SELECT
                  k
                FROM
                  DFPEtapIBundle:Klient k
                WHERE
                  k.nip = :nip'
            )
            ->setParameter('nip',$numer)
            ->getOneOrNullResult();
    }

    public function getListaKlientowQuery($kryteria = null)
    {
        $query = $this->getEntityManager()->getRepository('DFPEtapIBundle:Klient')->createQueryBuilder('k')
            ->select('k,f,fu,u,gk')
            ->leftJoin('k.filie','f')
            ->leftJoin('f.filieUzytkownicy','fu')
            ->leftJoin('fu.uzytkownik','u')
            ->leftJoin('k.grupyKlientow','gk');

        if($kryteria)
        {
            $pole = $kryteria['filterField'];
            $wartosc = $kryteria['filterValue'];
            $query->where("$pole LIKE '%$wartosc%'");
        };

        $query->getQuery();

        return $query;
    }

    public function getListaKlientowDSDQuery($kryteria = null)
    {
        $query = $this->getEntityManager()->getRepository('DFPEtapIBundle:FiliaUzytkownik')->createQueryBuilder('fu')
            ->select('k,f,fu,pd')
            ->leftJoin('fu.filia','f')
            ->leftJoin('fu.uzytkownik','u')
            ->leftJoin('u.profilUzytkownika','pu')
            ->leftJoin('f.klient','k')
            ->leftJoin('f.profileDzialalnosci','pd')
            ->where("pu.stanowisko IN ('Agent DSD', 'Handlowiec DSD', 'Dyrektor DSD','RKS DSD')");

        if($kryteria)
        {
            $pole = $kryteria['filterField'];
            $wartosc = $kryteria['filterValue'];
            $query->andwhere("$pole LIKE '%$wartosc%'");
        };

        $query->getQuery();

        try{
            return $query;
        } catch(NoResultException $e) {
            return null;
        }
    }
}
