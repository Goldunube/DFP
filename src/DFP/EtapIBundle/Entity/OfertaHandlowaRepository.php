<?php

namespace DFP\EtapIBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * OfertaHandlowaRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class OfertaHandlowaRepository extends EntityRepository
{
    public function getListaOczekujacychNaDoborSystemuMalarskiegoQuery()
    {
        $query = $this->getEntityManager()->getRepository('DFPEtapIBundle:OfertaHandlowa')->createQueryBuilder('oh')
            ->select('oh','f','uz','k','pd')
            ->innerJoin('oh.filia','f')
            ->leftJoin('f.klient','k')
            ->leftJoin('f.profileDzialalnosci','pd')
            ->innerJoin('oh.zamawiajacy','uz')
            ->where('oh.status IN (0,1)')
            ->getQuery();

        return $query;
    }

    public function getListaOczekujacychNaDoborSystemuMalarskiegoSearchQuery($kryteria = null)
    {
        $query = $this->getEntityManager()->getRepository('DFPEtapIBundle:OfertaHandlowa')->createQueryBuilder('oh')
            ->select('oh','f','uz','k','pd','fpzk')
            ->innerJoin('oh.filia','f')
            ->leftJoin('f.klient','k')
            ->leftJoin('f.profileDzialalnosci','pd')
            ->leftJoin('f.filiePoziomyZapotrzebowaniaKolorow','fpzk')
            ->innerJoin('oh.zamawiajacy','uz')
            ->where('oh.status IN (0,1)');

        if($kryteria)
        {
            $pole = $kryteria['filterField'];
            $wartosc = $kryteria['filterValue'];
            $query->andwhere("$pole LIKE '%$wartosc%'");
        };

        $query->getQuery();

        return $query;
    }

    public function getListaOczekujacychNaOpracowanieOfertyHandlowejQuery()
    {
        $query = $this->getEntityManager()->getRepository('DFPEtapIBundle:OfertaHandlowa')->createQueryBuilder('oh')
            ->select('oh','f','uz','k','pd')
            ->innerJoin('oh.filia','f')
            ->leftJoin('f.klient','k')
            ->leftJoin('f.profileDzialalnosci','pd')
            ->innerJoin('oh.zamawiajacy','uz')
            ->innerJoin('oh.technik','ut')
            ->where('oh.status IN (2,3)')
            ->getQuery();

        return $query;
    }

    public function getListaOczekujacychNaOpracowanieOfertyHandlowejSearchQuery($kryteria = null)
    {
        $query = $this->getEntityManager()->getRepository('DFPEtapIBundle:OfertaHandlowa')->createQueryBuilder('oh')
            ->select('oh','f','uz','k','pd','fpzk')
            ->innerJoin('oh.filia','f')
            ->leftJoin('f.klient','k')
            ->leftJoin('f.profileDzialalnosci','pd')
            ->leftJoin('f.filiePoziomyZapotrzebowaniaKolorow','fpzk')
            ->innerJoin('oh.zamawiajacy','uz')
            ->innerJoin('oh.technik','ut')
            ->where('oh.status IN (2,3)');

        if($kryteria)
        {
            $pole = $kryteria['filterField'];
            $wartosc = $kryteria['filterValue'];
            $query->andWhere("$pole LIKE '%$wartosc%'");
        };

        $query->getQuery();

        return $query;
    }

    public function findWTrakciePrzygotowania($filia)
    {
        $query = $this->getEntityManager()->getRepository('DFPEtapIBundle:OfertaHandlowa')->createQueryBuilder('oh')
            ->select('oh')
            ->where('oh.status IN (0,1,2,3)')
            ->andWhere('oh.filia = :id')
            ->setParameter('id',$filia)
            ->getQuery();

        return $query->getOneOrNullResult();
    }

    public function getListaMoichOfertHandlowych(Uzytkownik $uzytkownik)
    {
        $query = $this->getEntityManager()->getRepository('DFPEtapIBundle:OfertaHandlowa')->createQueryBuilder('oh')
            ->select('oh')
            ->where('oh.zamawiajacy = :id')
            ->setParameter('id',$uzytkownik)
            ->getQuery();

        return $query;
    }

    public function getListaWszystkichOfertHandlowychQuery()
    {
        $query = $this->getEntityManager()->getRepository('DFPEtapIBundle:OfertaHandlowa')->createQueryBuilder('oh')
            ->select('oh','f','uz','k','pd')
            ->innerJoin('oh.filia','f')
            ->leftJoin('f.klient','k')
            ->leftJoin('f.profileDzialalnosci','pd')
            ->innerJoin('oh.zamawiajacy','uz')
            ->innerJoin('oh.technik','ut')
            ->orderBy('oh.dataZlozeniaZamowienia','DESC')
            ->getQuery();

        return $query;
    }

    public function getListaWszystkichOfertHandlowychSearchQuery($kryteria = null)
    {
        $query = $this->getEntityManager()->getRepository('DFPEtapIBundle:OfertaHandlowa')->createQueryBuilder('oh')
            ->select('oh','f','uz','k','pd','fpzk')
            ->innerJoin('oh.filia','f')
            ->leftJoin('f.klient','k')
            ->leftJoin('f.profileDzialalnosci','pd')
            ->leftJoin('f.filiePoziomyZapotrzebowaniaKolorow','fpzk')
            ->leftJoin('oh.technik','ut')
            ->innerJoin('oh.zamawiajacy','uz')
            ->orderBy('oh.dataZlozeniaZamowienia','DESC');

        if($kryteria)
        {
            $pole = $kryteria['filterField'];
            $wartosc = $kryteria['filterValue'];
            $query->where("$pole LIKE '%$wartosc%'");
        };

        $query->getQuery();

        return $query;
    }

    public function getLiczbaWszystkichOfertHandlowych(array $kryteria = array())
    {
        $query = $this->createQueryBuilder('oh')
            ->select('oh.status,COUNT(oh) AS ile')
            ->groupBy('oh.status')
            ->getQuery();

        return $query->getResult();
    }
}
